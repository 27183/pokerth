
package pokerth_protocol;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "EndOfHandShowCards", isSet = false )
    public class EndOfHandShowCards implements IASN1PreparedElement {
            
@ASN1SequenceOf( name = "playerResults", isSetOf = false ) 

    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 10L 
		
	   )
	   
        @ASN1Element ( name = "playerResults", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private java.util.Collection<PlayerResult>  playerResults = null;
                
  
        
        public java.util.Collection<PlayerResult>  getPlayerResults () {
            return this.playerResults;
        }

        

        public void setPlayerResults (java.util.Collection<PlayerResult>  value) {
            this.playerResults = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(EndOfHandShowCards.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            