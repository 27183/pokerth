
package pokerth_protocol;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "AvatarHeader", isSet = false )
    public class AvatarHeader implements IASN1PreparedElement {
            
        @ASN1Element ( name = "avatarType", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private NetAvatarType avatarType = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 32L, 
		
		max = 30720L 
		
	   )
	   
        @ASN1Element ( name = "avatarSize", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer avatarSize = null;
                
  
        
        public NetAvatarType getAvatarType () {
            return this.avatarType;
        }

        

        public void setAvatarType (NetAvatarType value) {
            this.avatarType = value;
        }
        
  
        
        public Integer getAvatarSize () {
            return this.avatarSize;
        }

        

        public void setAvatarSize (Integer value) {
            this.avatarSize = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(AvatarHeader.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            