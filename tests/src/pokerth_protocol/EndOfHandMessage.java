
package pokerth_protocol;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "EndOfHandMessage" )
    public class EndOfHandMessage implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "EndOfHandMessage" , isSet = false )
       public static class EndOfHandMessageSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "gameId", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private NonZeroId gameId = null;
                
  
        
    @ASN1PreparedElement
    @ASN1Choice ( name = "endOfHandType" )
    public static class EndOfHandTypeChoiceType implements IASN1PreparedElement {
            
        @ASN1Element ( name = "endOfHandShowCards", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private EndOfHandShowCards endOfHandShowCards = null;
                
  
        @ASN1Element ( name = "endOfHandHideCards", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private EndOfHandHideCards endOfHandHideCards = null;
                
  
        
        public EndOfHandShowCards getEndOfHandShowCards () {
            return this.endOfHandShowCards;
        }

        public boolean isEndOfHandShowCardsSelected () {
            return this.endOfHandShowCards != null;
        }

        private void setEndOfHandShowCards (EndOfHandShowCards value) {
            this.endOfHandShowCards = value;
        }

        
        public void selectEndOfHandShowCards (EndOfHandShowCards value) {
            this.endOfHandShowCards = value;
            
                    setEndOfHandHideCards(null);
                            
        }

        
  
        
        public EndOfHandHideCards getEndOfHandHideCards () {
            return this.endOfHandHideCards;
        }

        public boolean isEndOfHandHideCardsSelected () {
            return this.endOfHandHideCards != null;
        }

        private void setEndOfHandHideCards (EndOfHandHideCards value) {
            this.endOfHandHideCards = value;
        }

        
        public void selectEndOfHandHideCards (EndOfHandHideCards value) {
            this.endOfHandHideCards = value;
            
                    setEndOfHandShowCards(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_EndOfHandTypeChoiceType;
        }

        private static IASN1PreparedElementData preparedData_EndOfHandTypeChoiceType = CoderFactory.getInstance().newPreparedElementData(EndOfHandTypeChoiceType.class);

    }

                
        @ASN1Element ( name = "endOfHandType", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private EndOfHandTypeChoiceType endOfHandType = null;
                
  
        
        public NonZeroId getGameId () {
            return this.gameId;
        }

        

        public void setGameId (NonZeroId value) {
            this.gameId = value;
        }
        
  
        
        public EndOfHandTypeChoiceType getEndOfHandType () {
            return this.endOfHandType;
        }

        

        public void setEndOfHandType (EndOfHandTypeChoiceType value) {
            this.endOfHandType = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_EndOfHandMessageSequenceType;
        }

       private static IASN1PreparedElementData preparedData_EndOfHandMessageSequenceType = CoderFactory.getInstance().newPreparedElementData(EndOfHandMessageSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "EndOfHandMessage", isOptional =  false , hasTag =  true, tag = 32, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private EndOfHandMessageSequenceType  value;        

        
        
        public EndOfHandMessage () {
        }
        
        
        
        public void setValue(EndOfHandMessageSequenceType value) {
            this.value = value;
        }
        
        
        
        public EndOfHandMessageSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(EndOfHandMessage.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            