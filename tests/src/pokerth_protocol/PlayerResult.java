
package pokerth_protocol;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "PlayerResult", isSet = false )
    public class PlayerResult implements IASN1PreparedElement {
            
        @ASN1Element ( name = "playerId", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private NonZeroId playerId = null;
                
  
        @ASN1Element ( name = "resultCard1", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Card resultCard1 = null;
                
  
        @ASN1Element ( name = "resultCard2", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Card resultCard2 = null;
                
  @ASN1Integer( name = "" )
    
@ASN1SequenceOf( name = "bestHandPosition", isSetOf = false ) 

    
            @ASN1SizeConstraint ( max = 5L )
        
        @ASN1Element ( name = "bestHandPosition", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private java.util.Collection<Long>  bestHandPosition = null;
                
  @ASN1Integer( name = "" )
    
        @ASN1Element ( name = "cardsValue", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Long cardsValue = null;
                
  
        @ASN1Element ( name = "moneyWon", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AmountOfMoney moneyWon = null;
                
  
        @ASN1Element ( name = "playerMoney", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AmountOfMoney playerMoney = null;
                
  
        
        public NonZeroId getPlayerId () {
            return this.playerId;
        }

        

        public void setPlayerId (NonZeroId value) {
            this.playerId = value;
        }
        
  
        
        public Card getResultCard1 () {
            return this.resultCard1;
        }

        

        public void setResultCard1 (Card value) {
            this.resultCard1 = value;
        }
        
  
        
        public Card getResultCard2 () {
            return this.resultCard2;
        }

        

        public void setResultCard2 (Card value) {
            this.resultCard2 = value;
        }
        
  
        
        public java.util.Collection<Long>  getBestHandPosition () {
            return this.bestHandPosition;
        }

        

        public void setBestHandPosition (java.util.Collection<Long>  value) {
            this.bestHandPosition = value;
        }
        
  
        
        public Long getCardsValue () {
            return this.cardsValue;
        }

        

        public void setCardsValue (Long value) {
            this.cardsValue = value;
        }
        
  
        
        public AmountOfMoney getMoneyWon () {
            return this.moneyWon;
        }

        

        public void setMoneyWon (AmountOfMoney value) {
            this.moneyWon = value;
        }
        
  
        
        public AmountOfMoney getPlayerMoney () {
            return this.playerMoney;
        }

        

        public void setPlayerMoney (AmountOfMoney value) {
            this.playerMoney = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(PlayerResult.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            